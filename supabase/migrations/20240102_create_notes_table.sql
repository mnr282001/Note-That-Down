-- Create the notes table
create table if not exists public.notes (
    id bigint generated by default as identity primary key,
    content text not null,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create the summaries table
create table if not exists public.summaries (
    id bigint generated by default as identity primary key,
    summary_date date not null,
    content text not null,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    -- Add a unique constraint to prevent multiple summaries for the same date
    constraint unique_summary_date unique (summary_date)
);

-- Enable Row Level Security for both tables
alter table public.notes enable row level security;
alter table public.summaries enable row level security;

-- Create policies for notes
create policy "Enable read access for all users"
    on public.notes for select
    using (true);

create policy "Enable insert access for all users"
    on public.notes for insert
    with check (true);

-- Create policies for summaries
create policy "Enable read access for all users"
    on public.summaries for select
    using (true);

create policy "Enable insert access for all users"
    on public.summaries for insert
    with check (true);

create policy "Enable update access for all users"
    on public.summaries for update
    using (true)
    with check (true);

-- Create updated_at trigger function if it doesn't exist
create or replace function public.handle_updated_at()
returns trigger as $$
begin
    new.updated_at = now();
    return new;
end;
$$ language plpgsql;

-- Create triggers for both tables
create trigger handle_notes_updated_at
    before update on public.notes
    for each row
    execute function public.handle_updated_at();

create trigger handle_summaries_updated_at
    before update on public.summaries
    for each row
    execute function public.handle_updated_at();
